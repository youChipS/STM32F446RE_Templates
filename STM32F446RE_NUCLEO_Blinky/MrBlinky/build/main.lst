ARM GAS  /tmp/cco9yz7A.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/cco9yz7A.s 			page 2


  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/cco9yz7A.s 			page 3


  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     /* USER CODE END WHILE */
  97:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
  98:Core/Src/main.c ****     HAL_Delay(1000);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c ****   /* USER CODE END 3 */
 103:Core/Src/main.c **** }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief System Clock Configuration
 107:Core/Src/main.c ****   * @retval None
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** void SystemClock_Config(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 126:Core/Src/main.c ****   {
 127:Core/Src/main.c ****     Error_Handler();
 128:Core/Src/main.c ****   }
 129:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 132:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 133:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 134:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief GPIO Initialization Function
 146:Core/Src/main.c ****   * @param None
ARM GAS  /tmp/cco9yz7A.s 			page 4


 147:Core/Src/main.c ****   * @retval None
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c **** static void MX_GPIO_Init(void)
 150:Core/Src/main.c **** {
  27              		.loc 1 150 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
 151:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 151 0
  41 0004 0024     		movs	r4, #0
  42 0006 0194     		str	r4, [sp, #4]
  43 0008 0294     		str	r4, [sp, #8]
  44 000a 0394     		str	r4, [sp, #12]
  45 000c 0494     		str	r4, [sp, #16]
  46 000e 0594     		str	r4, [sp, #20]
  47              	.LBB4:
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 154:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 154 0
  49 0010 0094     		str	r4, [sp]
  50 0012 0E4B     		ldr	r3, .L3
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 42F00102 		orr	r2, r2, #1
  53 001a 1A63     		str	r2, [r3, #48]
  54 001c 1B6B     		ldr	r3, [r3, #48]
  55 001e 03F00103 		and	r3, r3, #1
  56 0022 0093     		str	r3, [sp]
  57 0024 009B     		ldr	r3, [sp]
  58              	.LBE4:
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 157:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  59              		.loc 1 157 0
  60 0026 0A4D     		ldr	r5, .L3+4
  61 0028 2246     		mov	r2, r4
  62 002a 3F21     		movs	r1, #63
  63 002c 2846     		mov	r0, r5
  64 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  65              	.LVL0:
 158:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3
 161:Core/Src/main.c ****                            PA4 PA5 */
 162:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  66              		.loc 1 162 0
  67 0032 3F23     		movs	r3, #63
ARM GAS  /tmp/cco9yz7A.s 			page 5


  68 0034 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5;
 164:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  69              		.loc 1 164 0
  70 0036 0123     		movs	r3, #1
  71 0038 0293     		str	r3, [sp, #8]
 165:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  72              		.loc 1 165 0
  73 003a 0394     		str	r4, [sp, #12]
 166:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  74              		.loc 1 166 0
  75 003c 0494     		str	r4, [sp, #16]
 167:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  76              		.loc 1 167 0
  77 003e 01A9     		add	r1, sp, #4
  78 0040 2846     		mov	r0, r5
  79 0042 FFF7FEFF 		bl	HAL_GPIO_Init
  80              	.LVL1:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** }
  81              		.loc 1 169 0
  82 0046 07B0     		add	sp, sp, #28
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 12
  85              		@ sp needed
  86 0048 30BD     		pop	{r4, r5, pc}
  87              	.L4:
  88 004a 00BF     		.align	2
  89              	.L3:
  90 004c 00380240 		.word	1073887232
  91 0050 00000240 		.word	1073872896
  92              		.cfi_endproc
  93              	.LFE132:
  95              		.section	.text.Error_Handler,"ax",%progbits
  96              		.align	1
  97              		.global	Error_Handler
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	Error_Handler:
 104              	.LFB133:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE END 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void Error_Handler(void)
 180:Core/Src/main.c **** {
 105              		.loc 1 180 0
 106              		.cfi_startproc
 107              		@ Volatile: function does not return.
 108              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cco9yz7A.s 			page 6


 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111              	.LBB5:
 112              	.LBB6:
 113              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/cco9yz7A.s 			page 7


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cco9yz7A.s 			page 8


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 114              		.loc 2 142 0
 115              		.syntax unified
 116              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 117 0000 72B6     		cpsid i
 118              	@ 0 "" 2
 119              		.thumb
 120              		.syntax unified
 121              	.L6:
 122 0002 FEE7     		b	.L6
 123              	.LBE6:
 124              	.LBE5:
 125              		.cfi_endproc
 126              	.LFE133:
 128              		.section	.text.SystemClock_Config,"ax",%progbits
 129              		.align	1
 130              		.global	SystemClock_Config
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	SystemClock_Config:
 137              	.LFB131:
 110:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 138              		.loc 1 110 0
ARM GAS  /tmp/cco9yz7A.s 			page 9


 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 80
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 00B5     		push	{lr}
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 14, -4
 146 0002 95B0     		sub	sp, sp, #84
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 88
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149              		.loc 1 111 0
 150 0004 3422     		movs	r2, #52
 151 0006 0021     		movs	r1, #0
 152 0008 07A8     		add	r0, sp, #28
 153 000a FFF7FEFF 		bl	memset
 154              	.LVL2:
 112:Core/Src/main.c **** 
 155              		.loc 1 112 0
 156 000e 0023     		movs	r3, #0
 157 0010 0293     		str	r3, [sp, #8]
 158 0012 0393     		str	r3, [sp, #12]
 159 0014 0493     		str	r3, [sp, #16]
 160 0016 0593     		str	r3, [sp, #20]
 161 0018 0693     		str	r3, [sp, #24]
 162              	.LBB7:
 116:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 163              		.loc 1 116 0
 164 001a 0093     		str	r3, [sp]
 165 001c 194A     		ldr	r2, .L13
 166 001e 116C     		ldr	r1, [r2, #64]
 167 0020 41F08051 		orr	r1, r1, #268435456
 168 0024 1164     		str	r1, [r2, #64]
 169 0026 126C     		ldr	r2, [r2, #64]
 170 0028 02F08052 		and	r2, r2, #268435456
 171 002c 0092     		str	r2, [sp]
 172 002e 009A     		ldr	r2, [sp]
 173              	.LBE7:
 174              	.LBB8:
 117:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 175              		.loc 1 117 0
 176 0030 0193     		str	r3, [sp, #4]
 177 0032 1549     		ldr	r1, .L13+4
 178 0034 0A68     		ldr	r2, [r1]
 179 0036 22F44042 		bic	r2, r2, #49152
 180 003a 42F48042 		orr	r2, r2, #16384
 181 003e 0A60     		str	r2, [r1]
 182 0040 0A68     		ldr	r2, [r1]
 183 0042 02F44042 		and	r2, r2, #49152
 184 0046 0192     		str	r2, [sp, #4]
 185 0048 019A     		ldr	r2, [sp, #4]
 186              	.LBE8:
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187              		.loc 1 121 0
 188 004a 0222     		movs	r2, #2
 189 004c 0792     		str	r2, [sp, #28]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/cco9yz7A.s 			page 10


 190              		.loc 1 122 0
 191 004e 0122     		movs	r2, #1
 192 0050 0A92     		str	r2, [sp, #40]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 193              		.loc 1 123 0
 194 0052 1022     		movs	r2, #16
 195 0054 0B92     		str	r2, [sp, #44]
 124:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 196              		.loc 1 124 0
 197 0056 0D93     		str	r3, [sp, #52]
 125:Core/Src/main.c ****   {
 198              		.loc 1 125 0
 199 0058 07A8     		add	r0, sp, #28
 200 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 201              	.LVL3:
 202 005e 68B9     		cbnz	r0, .L11
 131:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 203              		.loc 1 131 0
 204 0060 0F23     		movs	r3, #15
 205 0062 0293     		str	r3, [sp, #8]
 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 206              		.loc 1 133 0
 207 0064 0021     		movs	r1, #0
 208 0066 0391     		str	r1, [sp, #12]
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 209              		.loc 1 134 0
 210 0068 0491     		str	r1, [sp, #16]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 211              		.loc 1 135 0
 212 006a 0591     		str	r1, [sp, #20]
 136:Core/Src/main.c **** 
 213              		.loc 1 136 0
 214 006c 0691     		str	r1, [sp, #24]
 138:Core/Src/main.c ****   {
 215              		.loc 1 138 0
 216 006e 02A8     		add	r0, sp, #8
 217 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 218              	.LVL4:
 219 0074 20B9     		cbnz	r0, .L12
 142:Core/Src/main.c **** 
 220              		.loc 1 142 0
 221 0076 15B0     		add	sp, sp, #84
 222              	.LCFI5:
 223              		.cfi_remember_state
 224              		.cfi_def_cfa_offset 4
 225              		@ sp needed
 226 0078 5DF804FB 		ldr	pc, [sp], #4
 227              	.L11:
 228              	.LCFI6:
 229              		.cfi_restore_state
 127:Core/Src/main.c ****   }
 230              		.loc 1 127 0
 231 007c FFF7FEFF 		bl	Error_Handler
 232              	.LVL5:
 233              	.L12:
 140:Core/Src/main.c ****   }
 234              		.loc 1 140 0
ARM GAS  /tmp/cco9yz7A.s 			page 11


 235 0080 FFF7FEFF 		bl	Error_Handler
 236              	.LVL6:
 237              	.L14:
 238              		.align	2
 239              	.L13:
 240 0084 00380240 		.word	1073887232
 241 0088 00700040 		.word	1073770496
 242              		.cfi_endproc
 243              	.LFE131:
 245              		.section	.text.main,"ax",%progbits
 246              		.align	1
 247              		.global	main
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	main:
 254              	.LFB130:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 255              		.loc 1 65 0
 256              		.cfi_startproc
 257              		@ Volatile: function does not return.
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI7:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 265              		.loc 1 73 0
 266 0002 FFF7FEFF 		bl	HAL_Init
 267              	.LVL7:
  80:Core/Src/main.c **** 
 268              		.loc 1 80 0
 269 0006 FFF7FEFF 		bl	SystemClock_Config
 270              	.LVL8:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 271              		.loc 1 87 0
 272 000a FFF7FEFF 		bl	MX_GPIO_Init
 273              	.LVL9:
 274              	.L16:
  97:Core/Src/main.c ****     HAL_Delay(1000);
 275              		.loc 1 97 0 discriminator 1
 276 000e 2021     		movs	r1, #32
 277 0010 0348     		ldr	r0, .L18
 278 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 279              	.LVL10:
  98:Core/Src/main.c **** 
 280              		.loc 1 98 0 discriminator 1
 281 0016 4FF47A70 		mov	r0, #1000
 282 001a FFF7FEFF 		bl	HAL_Delay
 283              	.LVL11:
 284 001e F6E7     		b	.L16
 285              	.L19:
 286              		.align	2
 287              	.L18:
ARM GAS  /tmp/cco9yz7A.s 			page 12


 288 0020 00000240 		.word	1073872896
 289              		.cfi_endproc
 290              	.LFE130:
 292              		.text
 293              	.Letext0:
 294              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 295              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 296              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 297              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 298              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 299              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 300              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 301              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 302              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 303              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cco9yz7A.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cco9yz7A.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cco9yz7A.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cco9yz7A.s:90     .text.MX_GPIO_Init:000000000000004c $d
     /tmp/cco9yz7A.s:96     .text.Error_Handler:0000000000000000 $t
     /tmp/cco9yz7A.s:103    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cco9yz7A.s:129    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cco9yz7A.s:136    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cco9yz7A.s:240    .text.SystemClock_Config:0000000000000084 $d
     /tmp/cco9yz7A.s:246    .text.main:0000000000000000 $t
     /tmp/cco9yz7A.s:253    .text.main:0000000000000000 main
     /tmp/cco9yz7A.s:288    .text.main:0000000000000020 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
